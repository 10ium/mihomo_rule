name: Update ACL Lists

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Define list of files to process
        id: vars
        run: |
          echo "files=BanProgramAD.list BanAD.list" >> $GITHUB_OUTPUT

      - name: Process all list files
        id: generate
        run: |
          changed=0

          for name in ${{ steps.vars.outputs.files }}; do
            url="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/$name"
            yaml_file="${name%.list}.yaml"

            echo "Downloading $name..."
            curl -fsSL "$url" | sed '/^#/d;/^$/d' > "$name"

            if [ ! -s "$name" ]; then
              echo "::error::$name is empty after download and cleanup"
              continue
            fi

            # تبدیل به YAML با کاما در انتها
            sed 's/^/  - /; s/$/,/' "$name" > temp_list.txt
            echo "payload:" > "new_$yaml_file"
            cat temp_list.txt >> "new_$yaml_file"
            rm temp_list.txt

            # بررسی تغییرات
            if [ -f "$yaml_file" ] && diff -q "$yaml_file" "new_$yaml_file" >/dev/null; then
              echo "No changes in $yaml_file"
              rm "new_$yaml_file"
            else
              echo "Changes detected in $yaml_file"
              mv "new_$yaml_file" "$yaml_file"
              changed=1
            fi
          done

          if [ "$changed" -eq 1 ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit & Push changes
        if: steps.generate.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add *.yaml
          git commit -m "chore: Update ACL YAML files ($(date -u +'%Y-%m-%d'))"
          git push

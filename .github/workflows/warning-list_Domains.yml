name: Process Webamooz Warning List

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # اجرا روزانه

jobs:
  process_domains:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests beautifulsoup4

      - name: Download and process domain list
        run: |
          import requests
          import re
          import json
          from bs4 import BeautifulSoup

          url = "https://raw.githubusercontent.com/Webamoozcom/warning-list/master/index.html"
          response = requests.get(url)
          html = response.text

          # جستجوی داده‌ها داخل تگ <script>
          soup = BeautifulSoup(html, "html.parser")
          script_tag = soup.find("script", string=re.compile(r"var\s+data\s*="))
          if not script_tag:
              raise Exception("هیچ اسکریپتی با 'var data =' پیدا نشد.")

          script_content = script_tag.string
          json_match = re.search(r"var\s+data\s*=\s*(\[\s*.*?\s*\]);", script_content, re.DOTALL)
          if not json_match:
              raise Exception("داده JSON درون اسکریپت پیدا نشد.")

          json_str = json_match.group(1)
          data = json.loads(json_str)

          domains = set()
          for entry in data:
              url = entry.get("url", "").strip()
              if not url:
                  continue

              # حذف http/https و www
              clean_url = re.sub(r'^(https?://)?(www\.)?', '', url, flags=re.IGNORECASE)

              if "t.me/" in clean_url:
                  domain = clean_url.split('/')[0].lower()
                  path = '/'.join(clean_url.split('/')[1:])
                  final_domain = f"{domain}/{path}" if path else domain
              else:
                  final_domain = clean_url.split('/')[0].split('?')[0].split('#')[0].lower()

              if '.' in final_domain or "t.me" in final_domain:
                  domains.add(final_domain)

          with open("warning-list.yaml", "w", encoding='utf-8') as f:
              f.write("payload:\n")
              for domain in sorted(domains):
                  f.write(f"  - DOMAIN-SUFFIX,{domain},\n")

        shell: python

      - name: Commit and push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add warning-list.yaml
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update warning list domains" && git push)
